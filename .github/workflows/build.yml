name: Build Napture Nightly

on:
  workflow_dispatch

env:
  CARGO_TERM_COLOR: always

jobs:
  build-linux-x86_64:
    name: Build linux-x86_64
    runs-on: ubuntu-24.04

    steps:
      - uses: actions/checkout@v4
      - name: Install deps
        run: |
          sudo apt update
          sudo apt install -y libpango1.0-dev libgtk-4-dev libgraphene-1.0-dev libadwaita-1-dev liblua5.4-dev
          sudo add-apt-repository universe
          sudo apt install libfuse2
      - name: Build Napture
        run: |
          cd napture
          cargo build --release --verbose
      - name: Pack Napture into AppImage
        run: |
          cd napture/target/release
          mkdir -p io.github.face_hh.Napture.AppDir/usr/share/metainfo/
          mkdir -p io.github.face_hh.Napture.AppDir/usr/lib/x86_64-linux-gnu/
          cp webx io.github.face_hh.Napture.AppDir/AppRun
          cp ../../io.github.face_hh.Napture.metainfo.xml io.github.face_hh.Napture.AppDir/usr/share/metainfo/
          cp ../../io.github.face_hh.Napture.desktop io.github.face_hh.Napture.AppDir/
          cp ../../io.github.face_hh.Napture.svg io.github.face_hh.Napture.AppDir/
          cp /usr/lib/x86_64-linux-gnu/libadwaita-1.so.* io.github.face_hh.Napture.AppDir/usr/lib/x86_64-linux-gnu/
          cp /usr/lib/x86_64-linux-gnu/libgtk-4.so.* io.github.face_hh.Napture.AppDir/usr/lib/x86_64-linux-gnu/
          cp /usr/lib/x86_64-linux-gnu/libpango-1.0.so.* io.github.face_hh.Napture.AppDir/usr/lib/x86_64-linux-gnu/
          cp /usr/lib/x86_64-linux-gnu/libgdk_pixbuf-2.0.so.* io.github.face_hh.Napture.AppDir/usr/lib/x86_64-linux-gnu/
          cp /usr/lib/x86_64-linux-gnu/libgio-2.0.so.* io.github.face_hh.Napture.AppDir/usr/lib/x86_64-linux-gnu/
          cp /usr/lib/x86_64-linux-gnu/libgobject-2.0.so.* io.github.face_hh.Napture.AppDir/usr/lib/x86_64-linux-gnu/
          cp /usr/lib/x86_64-linux-gnu/liblua5.4.so.* io.github.face_hh.Napture.AppDir/usr/lib/x86_64-linux-gnu/
          wget "https://github.com/AppImage/AppImageKit/releases/download/continuous/appimagetool-x86_64.AppImage"
          chmod a+x appimagetool-x86_64.AppImage
          ./appimagetool-x86_64.AppImage io.github.face_hh.Napture.AppDir Napture-linux-x86_64.AppImage
      - name: Upload Napture AppImage
        uses: actions/upload-artifact@v4
        with:
          name: Napture-linux-x86_64.AppImage
          path: napture/target/release/Napture-linux-x86_64.AppImage
  build-macos-universial:
    name: Build macos-universial
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v4
      - name: Install deps
        run: |
          brew install gtk4 graphene glib libadwaita lua create-dmg pkg-config
          arch -x86_64 /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
          arch -x86_64 /usr/local/bin/brew install gtk4 graphene glib libadwaita lua pkg-config || exit 0 # Brew tries to link python which will fail
      - name: Build Napture
        run: |
          rustup target add x86_64-apple-darwin
          cd napture
          RUSTFLAGS='-L /opt/homebrew/Cellar/' cargo build --release --target aarch64-apple-darwin
          PKG_CONFIG='/usr/local/bin/pkg-config' RUSTFLAGS='-L /usr/local/Cellar/' cargo build --release --target x86_64-apple-darwin
          lipo -create target/aarch64-apple-darwin/release/webx target/x86_64-apple-darwin/release/webx -output target/release/webx
      - name: Make an app bundle
        run: |
          cd napture
          mkdir -p target/release/Napture.app/Contents/MacOS
          cp target/release/webx target/release/Napture.app/Contents/MacOS
          cp ./Info.plist target/release/Napture.app/Contents
          mkdir -p target/release/Napture.app/Contents/Resources/AppIcon.iconset

          for SIZE in 16 32 64 128 256 512; do
              sips -z $SIZE $SIZE ./file.png --out target/release/Napture.app/Contents/Resources/AppIcon.iconset/icon_${SIZE}x${SIZE}.png
          done
          for SIZE in 32 64 256 512; do
              sips -z $SIZE $SIZE ./file.png --out target/release/Napture.app/Contents/Resources/AppIcon.iconset/icon_$(expr $SIZE / 2)x$(expr $SIZE / 2)x2.png
          done

          iconutil -c icns -o target/release/Napture.app/Contents/Resources/AppIcon.icns target/release/Napture.app/Contents/Resources/AppIcon.iconset
          rm -rf target/release/Napture.app/Contents/Resources/AppIcon.iconset
      - name: Sign the app
        run: codesign --force --deep --sign - napture/target/release/Napture.app
      - name: Pack Napture into DMG
        run: |
          cd napture/target/release
          create-dmg Napture-macos-universial.dmg Napture.app
      - name: Upload Napture DMG
        uses: actions/upload-artifact@v4
        with:
          name: Napture-macos-universial.dmg
          path: napture/target/release/Napture-macos-universial.dmg

  # IDK windows stuff
  build-windows-x86_64:
    name: Build windows-x86_64
    runs-on: windows-latest

    steps:
      - name: Install deps
        run: |
          C:\msys64\usr\bin\bash.exe -lc "pacman -Syu --noconfirm"
          C:\msys64\usr\bin\bash.exe -lc "pacman -S --noconfirm mingw-w64-x86_64-toolchain base-devel mingw-w64-x86_64-gtk4 mingw-w64-x86_64-gettext mingw-w64-x86_64-libxml2 mingw-w64-x86_64-librsvg mingw-w64-x86_64-pkgconf mingw-w64-x86_64-gcc mingw-w64-x86_64-libadwaita mingw-w64-x86_64-lua"
      - uses: actions/checkout@v4
      - name: Build Napture
        run: |
          $Env:Path += ';C:\msys64\mingw64\include;C:\msys64\mingw64\bin;C:\msys64\mingw64\lib'
          rustup toolchain install stable-gnu
          rustup default stable-gnu
          cd napture
          cargo build --release --verbose
      - name: Pack Napture
        run: |
          cd napture/target/release
          cp webx.exe Napture-windows-x86_64.exe
      - name: Upload Napture
        uses: actions/upload-artifact@v4
        with:
          name: Napture-windows-x86_64.exe
          path: |
            napture/target/release/Napture-windows-x86_64.exe
            C:\msys64\mingw64\lib\*
